<!doctype html>
<!--[if lt IE 7]>      <html class="no-js lt-ie9 lt-ie8 lt-ie7" lang=""> <![endif]-->
<!--[if IE 7]>         <html class="no-js lt-ie9 lt-ie8" lang=""> <![endif]-->
<!--[if IE 8]>         <html class="no-js lt-ie9" lang=""> <![endif]-->
<!--[if gt IE 8]><!-->
<html class="no-js" lang="">
<!--<![endif]-->

<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <title>Daten eintragen</title>
    <meta name="description" content="">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <!-- Bootstrap -->
    <!-- Latest compiled and minified CSS -->
    <link href="/static/css/bootstrap.min.css" rel="stylesheet">

    <link href="/static/css/custom.css" rel="stylesheet">

    <link href="/static/css/bootstrap-tagsinput.css" rel="stylesheet">


    <!-- Leaflet -->
    <link rel="stylesheet" href="/static/css/leaflet.css" />


    <!-- Load Esri Leaflet Geocoder from CDN -->
    <link rel="stylesheet" href="/static/css/esri-leaflet-geocoder.css">


    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
 <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
 <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
 <![endif]-->

</head>

<body>



    <div id="wrapper">
        <div id="mymap"></div>

        <div id="over_map">
            <button type="button" id="plusbutton" class="btn btn-default"><span class="glyphicon glyphicon-plus"></span></button>

        </div>

        <div id="over_map_points">
            <button type="button" id="pointsbutton" class="btn btn-default">0 Punkte</button>
        </div>


        <div id="over_map_settings">
            <button type="button" id="settingsbutton" class="btn btn-default"><span class="glyphicon glyphicon-th-list"></span></button>
        </div>

        <div class="dropdown over_map_user">

            <button type="button" id="userinfobutton" class="btn btn-default dropdown-toggle" data-toggle="dropdown"><span class="glyphicon glyphicon-user"></span><span class="caret"></span></button>
            <ul class="dropdown-menu pull-right">
                <li><a href="/user/profile" id="myprofile">Mein Profil</a></li>
                <li><a href="/user/logout">Logout</a></li>
            </ul>
        </div>

        <div class="modal fade" id="modal_profile">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span> </button>
                        <h4 class="modal-title">Mein Profil</h4>

                    </div>
                    <div class="modal-body">
                        <div class="row">
                            <div class="col-xs-6">Meine Tags: X</div>
                            <div class="col-xs-6">Meine Punkte: X</div>
                        </div>
                        <br /> Username:
                        <%= user.username %>
                            <br /> E-Mail:
                            <%= user.email %>
                                <br />
                    </div>
                </div>
            </div>
        </div>


        <div class="modal fade" id="modal_settings">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span> </button>
                        <h4 class="modal-title">Optionen</h4>

                    </div>
                    <div class="modal-body">
                        <div class="row">

                            <ul class="nav nav-pills nav-stacked">

                                <li role="presentation"><a href="#modal_quests" data-toggle="modal" data-dismiss="modal">Quests</a></li>
                                <li role="presentation"><a href="#modal_rank" data-toggle="modal" data-dismiss="modal">Rangliste</a></li>
                                <li role="presentation"><a href="#modal_rounds" data-toggle="modal" data-dismiss="modal">Spielrunden</a></li>
                            </ul>

                        </div>
                    </div>
                </div>
            </div>
        </div>


        <div class="modal fade" id="modal_rank">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span> </button>
                        <h4 class="modal-title">Rangliste</h4>

                    </div>
                    <div class="modal-body">
                        <div class="row">

                            <br />
                            <table class="table table-striped table-bordered">
                                <thead>
                                    <tr>
                                        <th>Spieler</th>
                                        <th>Punkte</th>
                                        <th>Rang</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr>
                                        <th scope="row">Mark</th>
                                        <td>12</td>
                                        <td>1</td>
                                    </tr>
                                    <tr>
                                        <th scope="row">Jacob</th>
                                        <td>9</td>
                                        <td>2</td>
                                    </tr>
                                    <tr>
                                        <th scope="row">Larry</th>
                                        <td>5</td>
                                        <td>3</td>
                                    </tr>
                                </tbody>
                            </table>

                        </div>
                    </div>
                    <div class="modal-footer">
                        <a href="#modal_settings" data-toggle="modal" data-dismiss="modal" class="btn btn-primary pull-left">Zurück zu Optionen</a>
                    </div>
                </div>
            </div>
        </div>

        <div class="modal fade" id="modal_rounds">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span> </button>
                        <h4 class="modal-title">Spielrunden</h4>

                    </div>
                    <div class="modal-body">
                        <div class="row">

                            <h5>Aktuelle Runde:</h5>
                            <a href="#" data-dismiss="modal">
                                <button type="button" class="btn btn-primary btn-lg btn-block">Street-Art</button>
                            </a>
                            <hr />

                            <h5>Frühere Runden:</h5>

                            <button type="button" class="btn btn-success btn-lg btn-block">Aufzüge</button>

                            <hr />

                            <button type="button" class="btn btn-warning btn-lg btn-block">Rolltreppen</button>

                            <hr />

                        </div>
                    </div>
                    <div class="modal-footer">
                        <a href="#modal_settings" data-toggle="modal" data-dismiss="modal" class="btn btn-primary pull-left">Zurück zu Optionen</a>
                    </div>
                </div>
            </div>
        </div>


        <div class="modal fade" id="modal_marker">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span> </button>
                        <h4 class="modal-title">Ein Tag</h4>

                    </div>
                    <div class="modal-body">
                        <div class="row">
                            
                            <span><strong>Standort:</strong> <div id="objectPosition"></div></span>
                            <br />
                            <span><strong>Erstellungsdatum:</strong> <div id="objectCreated"></div></span>
                             <br />
                            <span><strong>Aktualisierungsdatum:</strong> <div id="objectUpdated"></div></span>
                             <br />
                            <span><strong>Kategorien:</strong> <div id="objectCategories"></div></span>
                             <br />
                            <span><strong>Beschreibung:</strong> <div id="objectDescription"></div></span>
                            
                                <div id="btns_vote">
                            
                                               <a href="#" id="btns_vote_up" class="btn btn-info btn-lg text-center">
          <span class="glyphicon glyphicon-chevron-up"></span>
        </a>
                                    
                                                      <a href="#" id="btns_vote_down" class="btn btn-info btn-lg text-center">
          <span class="glyphicon glyphicon-chevron-down"></span>
        </a>
                                    
                            </div>
                          

                        </div>
                 
                    </div>
                    <div class="modal-footer">


                        <button type="button" id="editbutton" class="btn btn-primary">Tag bearbeiten <span class="glyphicon glyphicon-edit"></span></button>

                    </div>

                </div>
            </div>
        </div>

        <div class="modal fade" id="modal_marker_edit">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span> </button>
                        <h4 class="modal-title">Tag bearbeiten</h4>

                    </div>
                    <div class="modal-body">
                        <div class="row">

                            <form id="beitrag_form_edit">
                                <div class="form-group">
                                    <label for="currentposition">Aktuelle Position: </label>
                                    <div id="myposition_edit"></div>
                                </div>
                                <div class="form-group">
                                    <label for="fileuploadlabel">Neues Bild hochladen:</label>
                                    <input type="file" class="form-control-file" id="fileupload_edit">
                                </div>
                                <div class="form-group">
                                    <label for="categorylabel">Kategorien ändern:</label>
                                    <br />
                                    <input type="text" id="tagsinput_edit" data-role="tagsinput" />

                                </div>
                                <div class="form-group">
                                    <label for="textarealabel">Informationen verändern?</label>
                                    <textarea class="form-control" id="textarea_infos_edit" rows="3"></textarea>
                                </div>
                            </form>

                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="submit" id="beitrag_submit_edit" class="btn btn-primary">Absenden</button>
                    </div>
                </div>
            </div>
        </div>

        <div class="modal fade" id="modal_beitrag">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span> </button>
                        <h4 class="modal-title">Neuen Beitrag anlegen</h4>

                    </div>
                    <div class="modal-body">
                        <form id="beitrag_form">
                            <div class="form-group">
                                <label for="currentposition">Deine gewählte Position: </label>
                                <div id="myposition"></div>
                            </div>
                            <div class="form-group">
                                <label for="fileuploadlabel">Lade ein Bild von dem hoch, was du siehst:</label>
                                <input type="file" class="form-control-file" id="file">
                            </div>
                            <div class="form-group">
                                <label for="categorylabel">Kategorisiere deinen Fund:</label>
                                <br />
                                <input type="text" id="tagsinput" value="" data-role="tagsinput" />

                            </div>
                            <div class="form-group">
                                <label for="textarealabel">Hast du weitere Informationen?</label>
                                <textarea class="form-control" id="textarea_infos" rows="3"></textarea>
                            </div>
                        </form>
                    </div>
                    <div class="modal-footer">
                        <button type="submit" id="beitrag_submit" class="btn btn-primary">Absenden</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script>
    <script>
        $(document).ready(function () {

            // enthält alle Marker vom Server wenn die Karte geladen wurde
            var mapMarkers = [];
            // Zählt die Marker, die via AJAX lokal vom Nutzer gesetzt wurden
            var countMarkers = 0;
            // initiale Position des Users in Geokoordinaten
            var initialPosition = {};
            // initiale Adresse des Users als String
            var initialAddress = null;
            // aktuelle Position wenn der Marker verschoben wurde
            var currentPosition = {};
            // Geocoding Plugin
            var geocodeService = L.esri.Geocoding.geocodeService();
            // globale ID des Objektes um ein direktes PUT zu erlauben
            var objectID = null;
            // neue Objekte in einer Session werden hier abgelegt um sie den Markern zuordnen zu können
            var newObjects = [];


            var mymap = L.map('mymap').locate({
                setView: true,
                maxZoom: 16
            }).on('locationfound', onLocationFound).on('locationerror', onLocationError);

            L.tileLayer('https://cartodb-basemaps-{s}.global.ssl.fastly.net/light_all/{z}/{x}/{y}.png', {
                maxZoom: 18,
                attribution: '&copy; <a href="http://osm.org/copyright">OpenStreetMap</a> contributors'
            }).addTo(mymap);


            function onLocationFound(e) {

                mapMarkers[countMarkers] = new L.marker(e.latlng, {
                    draggable: true
                }).addTo(mymap).on('dragend', onDragEnd).on('click', onMarkerClick);


                var radius = e.accuracy / 2;

                // aktuelle Position auf die gefundene Position setzen
                currentPosition = e.latlng;

                // initiale Position auf die gefundene Position setzen 
                initialPosition = e.latlng;

                geocodeService.reverse().latlng(initialPosition).run(function (error, result) {

                    // initiale Adresse durch Geocoding
                    initialAddress = result.address.Match_addr;

                    mapMarkers[countMarkers].bindPopup(initialAddress).openPopup();

                    //L.circle(e.latlng, radius).addTo(mymap);

                    // initiale Adresse in HTML anzeigen (auch für spätere POSTS nötig)
                    $('#myposition').html(initialAddress);



                });



            }

            function onLocationError(e) {
                alert(e.message);
            }


            // wird nur ausgeführt bei Klick auf Marker, die in der Session vom User erstellt wurden
            function onMarkerClick(event) {


                $('#plusbutton').prop('disabled', false);

                mymap.closePopup();

                var reversedGeoAddress = null;

                // Logik um aus einem Marker die Adresse zu finden und daraus die ID zu erhalten für den 
                // GET Request
                geocodeService.reverse().latlng(event.latlng).run(function (error, result) {

                    reversedGeoAddress = result.address.Match_addr;

                    jQuery.map(newObjects, function (val, i) {

                        if (val.address == reversedGeoAddress) {

                            objectID = val.id;

                            $.ajax({
                                type: "GET",
                                url: "https://localhost:3000/objects/" + objectID,
                                success: function (response) {


                                    var objectLocation = JSON.parse(response.location);

                                    geocodeService.reverse().latlng(objectLocation).run(function (error, result) {


                                        $("#objectPosition").text(result.address.Match_addr);
                                        $("#objectCreated").text(new Date(response.createdAt).toLocaleString());
                                        $("#objectUpdated").text(new Date(response.updatedAt).toLocaleString());
                                        $("#objectCategories").text(response.categories);
                                        $("#objectDescription").text(response.description);
                                        

                                        $("#modal_marker_edit #tagsinput_edit").tagsinput('removeAll');
                                        $("#modal_marker_edit #myposition_edit").html(reversedGeoAddress);

                                        jQuery.each(response.categories, function (i, cat) {
                                            $("#modal_marker_edit #tagsinput_edit").tagsinput('add', cat);
                                        });


                                        $("#modal_marker_edit #textarea_infos_edit").val(response.description);

                                        $("#popup_link").on('click', function () {
                                            mymap.closePopup();
                                        });

                                        $("#editbutton").on('click', function () {

                                            $("#modal_marker").modal("hide");
                                            $("#modal_marker_edit").modal("show");

                                        });

                                    });




                                },
                                error: function (err) {
                                    console.log(err);
                                }




                            });


                        }



                    });

                });

            }


            // wenn der initiale Positions-Marker verschoben wurde
            function onDragEnd(event) {


                $('#plusbutton').prop('disabled', false);

                var radius = event.target.accurancy / 2;
                var marker = event.target;
                var position = marker.getLatLng();
                marker.setLatLng(new L.LatLng(position.lat, position.lng), {
                    draggable: 'true'
                });
                mymap.panTo(new L.LatLng(position.lat, position.lng))

                geocodeService.reverse().latlng(position).run(function (error, result) {

                    marker.bindPopup(result.address.Match_addr).openPopup();

                    currentPosition = position;
                    $('#myposition').html(result.address.Match_addr);


                });
                mymap.addLayer(marker);

            }


            // Hole alle Objekte aus der Datenbank und setze entsprechende Marker
            $.ajax({
                type: "GET",
                url: "https://localhost:3000/objects/",
                success: function (response) {

                    var markers = [];


                    // Marker des Benutzers ROT, andere Marker GRÜN
                    jQuery.map(response, function (val, i) {


                        if (val.userID == '<%=user._id %>') {

                            markers[i] = L.marker(JSON.parse(val.location), {
                                icon: redIcon
                            }).addTo(mymap);

                        } else {
                            markers[i] = L.marker(JSON.parse(val.location), {
                                icon: greenIcon
                            }).addTo(mymap);
                        }

                        markers[i].on('click', function () {
                          

                            $('#plusbutton').prop('disabled', true);

                            // setze objectID für ein mögliches PUT
                            objectID = val._id;

                            // setze aktuelle Position auf die des Markers
                            currentPosition = markers[i].getLatLng();

                            geocodeService.reverse().latlng(JSON.parse(val.location)).run(function (error, result) {



                                var reversedGeoAddress = result.address.Match_addr;


                                markers[i].bindPopup(reversedGeoAddress + "<br>" + "<img id='markerImage' src='https://images-na.ssl-images-amazon.com/images/I/61vWHzU8L5L._SY355_.jpg'/>" + "<br>" + "<a id='popup_link' href='#modal_marker' data-toggle='modal'>Weitere Informationen</a>").openPopup();


                                // GET Request falls der User das Objekt bearbeitet hat
                                $.ajax({
                                    type: "GET",
                                    url: "https://localhost:3000/objects/" + objectID,
                                    success: function (response) {


                                        $("#objectPosition").text(reversedGeoAddress);
                                        $("#objectCreated").text(new Date(response.createdAt).toLocaleString());
                                        $("#objectUpdated").text(new Date(response.updatedAt).toLocaleString());
                                        $("#objectCategories").text(response.categories);
                                        $("#objectDescription").text(response.description);


                                        $("#modal_marker_edit #tagsinput_edit").tagsinput('removeAll');
                                        $("#modal_marker_edit #myposition_edit").html(reversedGeoAddress);

                                        jQuery.each(response.categories, function (i, cat) {
                                            $("#modal_marker_edit #tagsinput_edit").tagsinput('add', cat);
                                        });


                                        $("#modal_marker_edit #textarea_infos_edit").val(response.description);

                                    },
                                    error: function (err) {
                                        console.log(err);
                                    }
                                });


                                $("#popup_link").on('click', function () {
                                    mymap.closePopup();
                                });

                                $("#editbutton").on('click', function () {

                                    $("#modal_marker").modal("hide");
                                    $("#modal_marker_edit").modal("show");

                                });



                            });

                        });
                    })


                },
                error: function (err) {
                    console.log(err);
                }
            });




            $("#beitrag_submit_edit").on('click', function (e) {
                e.preventDefault();


                if ($('#tagsinput_edit').val() && $('#textarea_infos_edit').val()) {

                    var data = {

                        location: JSON.stringify(currentPosition),
                        categories: JSON.stringify($('#tagsinput_edit').tagsinput('items')),
                        description: $('#textarea_infos_edit').val(),
                        userID: "<%= user._id %>",
                        themeID: "<%= themeID %>"

                    }

                    $.ajax({
                        type: "PUT",
                        url: "https://localhost:3000/objects/" + objectID,
                        data: data,
                        success: function (response) {
                                    geocodeService.reverse().latlng(JSON.parse(response.location)).run(function (error, result) {



                                        var reversedGeoAddress = result.address.Match_addr;

                                        $("#objectPosition").text(reversedGeoAddress);
                                        $("#objectCreated").text(new Date(response.createdAt).toLocaleString());
                                        $("#objectUpdated").text(new Date(response.updatedAt).toLocaleString());
                                        $("#objectCategories").text(response.categories);
                                        $("#objectDescription").text(response.description);


                                        $("#modal_marker_edit #tagsinput_edit").tagsinput('removeAll');
                                        $("#modal_marker_edit #myposition_edit").html(reversedGeoAddress);

                                        jQuery.each(response.categories, function (i, vale) {
                                            $("#modal_marker_edit #tagsinput_edit").tagsinput('add', vale);
                                        });


                                        $("#modal_marker_edit #textarea_infos_edit").val(response.description);



                                        $('#modal_marker_edit').modal('hide');
                                        $("#modal_marker").modal("show");

                                    });

                        },
                        error: function (err) {
                            console.log(err);
                        }
                    });
                } else {
                    alert("Felder ausfüllen");
                }
            });


            $("#beitrag_submit").on('click', function (e) {
                e.preventDefault();


                if ($('#tagsinput').val() || $('#textarea_infos').val()) {

                    var data = {

                        location: JSON.stringify(currentPosition),
                        categories: JSON.stringify($('#tagsinput').tagsinput('items')),
                        description: $('#textarea_infos').val(),
                        userID: "<%= user._id %>",
                        themeID: "<%= themeID %>",
                        picture: $("#file").prop("files")[0]

                    }


                    $.ajax({
                        type: "POST",
                        url: "https://localhost:3000/objects/",
                        data: data,
                        success: function (response) {


                            $('#modal_beitrag').modal('hide')

                            // setze den Marker auf der Karte fest
                            mapMarkers[countMarkers].setIcon(redIcon).dragging.disable();

                            geocodeService.reverse().latlng(currentPosition).run(function (error, result) {

                                var reversedGeoAddress = result.address.Match_addr;

                                // erzeuge ein neues Objekt für den Marker
                                var object = {};
                                object.id = response._id;
                                object.address = reversedGeoAddress;

                                newObjects.push(object);

                                // binde ein Popup an den Marker
                                mapMarkers[countMarkers - 1].bindPopup(reversedGeoAddress + "<br>" + "<img id='markerImage' src='https://images-na.ssl-images-amazon.com/images/I/61vWHzU8L5L._SY355_.jpg'/>" + "<br>" + "<a id='popup_link' href='#modal_marker' data-toggle='modal'>Weitere Informationen</a>").openPopup();


                                        $("#objectPosition").text(reversedGeoAddress);
                                        $("#objectCreated").text(response.createdAt);
                                        $("#objectUpdated").text(response.updatedAt);
                                        $("#objectCategories").text(response.categories);
                                        $("#objectDescription").text(response.description);


                                $("#popup_link").on('click', function () {
                                    mymap.closePopup();


                                });


                                $("#modal_marker_edit #tagsinput_edit").tagsinput('removeAll');
                                $("#modal_marker_edit #myposition_edit").html(reversedGeoAddress);


                                jQuery.each(response.categories, function (i, cat) {
                                    $("#modal_marker_edit #tagsinput_edit").tagsinput('add', cat);
                                });


                                $("#modal_marker_edit #textarea_infos_edit").val(response.description);

                                $("#editbutton").on('click', function () {

                                    $("#modal_marker").modal("hide");
                                    $("#modal_marker_edit").modal("show");

                                });

                            });

                            // Resette das Formular für einen neuen Beitrag
                            $('#beitrag_form')[0].reset();
                            $("#tagsinput").tagsinput('removeAll');
                            $("#myposition").html(initialAddress);
                            
                            // zähle Marker hoch um einen neuen zu erstellen
                            countMarkers++;

                            // neuer Marker für initiale Position
                            mapMarkers[countMarkers] = new L.marker(initialPosition, {
                                draggable: true
                            }).addTo(mymap).on('dragend', onDragEnd).on('click', onMarkerClick);


                            mapMarkers[countMarkers].bindPopup(initialAddress);



                        },
                        error: function (err) {
                            console.log(err);
                        }
                    });
                } else {
                    alert("Felder ausfüllen");
                }
            });



            //getting click event to show modal
            $('#plusbutton').on('click', function () {
                $('#modal_beitrag').modal();

                //appending modal background inside the bigform-content
                $('.modal-backdrop').appendTo('#wrapper');
                //removing body classes to able click events
                $('body').removeClass();
            });


            //getting click event to show modal
            $('#settingsbutton').click(function () {
                $('#modal_settings').modal();

                //appending modal background inside the bigform-content
                $('.modal-backdrop').appendTo('#wrapper');
                //removing body classes to able click events
                $('body').removeClass();
            });

            //getting click event to show modal
            $('#myprofile').click(function (e) {
                e.preventDefault();
                $('#modal_profile').modal();

                //appending modal background inside the bigform-content
                $('.modal-backdrop').appendTo('#wrapper');
                //removing body classes to able click events
                $('body').removeClass();
            });


            var citynames = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                prefetch: {
                    url: '/static/citynames.json',
                    filter: function (list) {
                        return $.map(list, function (cityname) {
                            return {
                                name: cityname
                            };
                        });
                    }
                }
            });
            citynames.initialize();

            $('#tagsinput').tagsinput({
                //                typeaheadjs: {
                //                    name: 'citynames',
                //                    displayKey: 'name',
                //                    valueKey: 'name',
                //                    source: citynames.ttAdapter()
                //                }
                confirmKeys: [44, 188, 32],
                trimValue: true
            });

            $('#tagsinput_edit').tagsinput({
                //                typeaheadjs: {
                //                    name: 'citynames',
                //                    displayKey: 'name',
                //                    valueKey: 'name',
                //                    source: citynames.ttAdapter()
                //                }
                confirmKeys: [44, 188, 32],
                trimValue: true
            });

        });
    </script>



    <!-- Include all compiled plugins (below), or include individual files as needed -->
    <!-- Latest compiled and minified JavaScript -->
    <script src="/static/js/bootstrap.min.js"></script>

    <script src="/static/js/bootstrap-tagsinput.js"></script>

    <script src="/static/js/typeahead.js"></script>

    <script src="/static/js/leaflet.js"></script>

    <!-- Load Esri Leaflet from CDN -->
    <script src="/static/js/esri-leaflet.js"></script>

    <script src="/static/js/esri-leaflet-geocoder-debug.js"></script>

    <script src="/static/js/leaflet-color-markers.js"></script>
</body>

</html>